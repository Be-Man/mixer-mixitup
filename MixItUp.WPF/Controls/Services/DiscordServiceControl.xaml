<local:ServiceControlBase x:Class="MixItUp.WPF.Controls.Services.DiscordServiceControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:resx="clr-namespace:MixItUp.Base;assembly=MixItUp.Base"
             xmlns:local="clr-namespace:MixItUp.WPF.Controls.Services"
             xmlns:MaterialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <local:ServiceControlBase.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    </local:ServiceControlBase.Resources>

    <Grid Margin="10" HorizontalAlignment="Center">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="450" />
                <ColumnDefinition Width="10" />
                <ColumnDefinition Width="200" />
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="20" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <TextBlock Grid.Row="0" TextWrapping="Wrap">Discord service connectivity allows you to get information about your Discord account, send messages to channels, and control the audio from voice channels. When you log in, an authentication webpage will open asking you to log in to Discord and approve Mix It Up to access your information.</TextBlock>

                <TextBlock Grid.Row="2" TextWrapping="Wrap">The default Mix It Up Discord application has a 30 second cooldown between each Discord action to prevent rate limiting issues for all users. To circumvent the 30 second cooldown, you can create your own custom Discord Application: <Hyperlink NavigateUri="https://github.com/SaviorXTanren/mixer-mixitup/wiki/Services#discord" RequestNavigate="Hyperlink_RequestNavigate">Creating Custom Discord Application</Hyperlink></TextBlock>
            </Grid>

            <Grid Grid.Column="2" HorizontalAlignment="Center" VerticalAlignment="Center">
                <Grid Visibility="{Binding IsConnected, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Button Command="{Binding LogOutCommand}" HorizontalAlignment="Center" MinWidth="90" Content="{x:Static resx:Resources.Logout}"/>
                </Grid>

                <Grid Visibility="{Binding IsNotConnected, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="40" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <Button Command="{Binding LogInCommand}" HorizontalAlignment="Center" MinWidth="90" Content="{x:Static resx:Resources.Login}"/>

                    <Grid Grid.Row="2" HorizontalAlignment="Center">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="10" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <TextBlock Grid.Column="0">Custom Application</TextBlock>

                        <ToggleButton Grid.Column="2" IsChecked="{Binding CustomApplication}" />
                    </Grid>
                </Grid>
            </Grid>
        </Grid>

        <Grid Grid.Row="1" Margin="0,20,0,0" Visibility="{Binding CustomApplication, Converter={StaticResource BooleanToVisibilityConverter}}" HorizontalAlignment="Center">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="200" />
                <ColumnDefinition Width="20" />
                <ColumnDefinition Width="200" />
                <ColumnDefinition Width="20" />
                <ColumnDefinition Width="200" />
            </Grid.ColumnDefinitions>

            <TextBox Grid.Column="0" Text="{Binding CustomClientID}" MaterialDesign:HintAssist.Hint="Application Client ID" Style="{StaticResource MaterialDesignFloatingHintTextBox}" />

            <TextBox Grid.Column="2" Text="{Binding CustomClientSecret}" MaterialDesign:HintAssist.Hint="Application Client Secret" Style="{StaticResource MaterialDesignFloatingHintTextBox}" />

            <TextBox Grid.Column="4" Text="{Binding CustomBotToken}" MaterialDesign:HintAssist.Hint="Application Bot Token" Style="{StaticResource MaterialDesignFloatingHintTextBox}" />
        </Grid>
    </Grid>
</local:ServiceControlBase>
